import fs from 'fs';

console.log('üîç Diagn√≥stico del sistema de integraci√≥n de pagos...');

try {
  // Leer el archivo de base de datos
  const dbContent = fs.readFileSync('data/db.json', 'utf8');
  const db = JSON.parse(dbContent);
  
  console.log('\nüìä AN√ÅLISIS DEL SISTEMA:');
  
  // Verificar reservas con debitMovementId
  const reservasConDebitId = db.reservations?.filter(r => r.debitMovementId) || [];
  console.log(`‚úÖ Reservas vinculadas a d√©bitos: ${reservasConDebitId.length}`);
  
  // Verificar movimientos con allocations
  const movementsConAllocations = db.movements?.filter(m => m.allocations && m.allocations.length > 0) || [];
  console.log(`‚úÖ Movimientos con asignaciones: ${movementsConAllocations.length}`);
  
  // Verificar pagos con allocations
  const pagosConAllocations = db.payments?.filter(p => p.allocations && p.allocations.length > 0) || [];
  console.log(`‚úÖ Pagos con asignaciones: ${pagosConAllocations.length}`);
  
  console.log('\nüîó VERIFICACI√ìN DE V√çNCULOS:');
  
  // Para cada reserva vinculada, verificar si hay pagos relacionados
  let reservasConPagosCorrectos = 0;
  reservasConDebitId.forEach(reserva => {
    const debitoId = reserva.debitMovementId;
    const pagoRelacionado = db.payments?.find(p => 
      p.allocations?.some(a => a.debitId === debitoId)
    );
    
    if (pagoRelacionado) {
      reservasConPagosCorrectos++;
      console.log(`  ‚úÖ Reserva ${reserva.id.substring(0,8)}... ‚Üí D√©bito ${debitoId} ‚Üí Pago ${pagoRelacionado.id}`);
    } else {
      console.log(`  ‚ö†Ô∏è  Reserva ${reserva.id.substring(0,8)}... ‚Üí D√©bito ${debitoId} (sin pago)`);
    }
  });
  
  console.log(`\nüìà RESULTADOS:`);
  console.log(`   ‚Ä¢ Total reservas vinculadas: ${reservasConDebitId.length}`);
  console.log(`   ‚Ä¢ Reservas con pagos correctos: ${reservasConPagosCorrectos}`);
  console.log(`   ‚Ä¢ Sistema de integraci√≥n: ${reservasConPagosCorrectos > 0 ? '‚úÖ FUNCIONANDO' : '‚ö†Ô∏è NECESITA DATOS'}`);
  
  // Verificar c√≥digo en p√°gina de socios
  const sociosContent = fs.readFileSync('app/admin/socios/page.tsx', 'utf8');
  const tieneDebitMovementId = sociosContent.includes('debitMovementId:');
  console.log(`   ‚Ä¢ C√≥digo actualizado en socios: ${tieneDebitMovementId ? '‚úÖ S√ç' : '‚ùå NO'}`);
  
  // Verificar c√≥digo en p√°gina de reservas
  const reservasContent = fs.readFileSync('app/admin/reservas/page.tsx', 'utf8');
  const tieneGetRelatedPayments = reservasContent.includes('getRelatedPayments');
  console.log(`   ‚Ä¢ Funci√≥n getRelatedPayments: ${tieneGetRelatedPayments ? '‚úÖ S√ç' : '‚ùå NO'}`);
  
  console.log('\nüéØ PR√ìXIMOS PASOS:');
  console.log('   1. Crear una reserva AL CONTADO desde p√°gina de socios');
  console.log('   2. Verificar que aparece correctamente pagada en p√°gina de reservas');
  console.log('   3. Sistema completo de integraci√≥n funcionando ‚ú®');
  
} catch (error) {
  console.error('‚ùå Error en diagn√≥stico:', error);
}